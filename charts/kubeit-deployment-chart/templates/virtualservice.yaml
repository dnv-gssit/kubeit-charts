{{- define "retries" -}}
{{- if .Values.defaultRouting.retries.enabled }}
    retries:
{{- if .Values.defaultRouting.retries.settings }}
{{ .Values.defaultRouting.retries.settings | toYaml | trim | indent 6 }}
{{- else }}
      attempts: 3
      perTryTimeout: 2s
{{- end -}}
{{- end -}}
{{- end -}}

{{- if not .Values.deploymentOnly -}}
{{- if .Values.defaultRouting.enabled}}
{{- $fullName := include "platform-service.fullname" . -}}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ include "platform-service.serviceName" . }}
spec:
  hosts:
  - {{ include "platform-service.fullQualifiedServiceName" . }}
  gateways:
  - mesh
  http:
  - route:
    - destination:
        host: {{ include "platform-service.fullQualifiedServiceName" . | quote }}
{{- include "retries" . }}
    {{- if .Values.defaultRouting.timeout }}
    timeout: {{ .Values.defaultRouting.timeout }}
    {{- end }}
---
{{- if .Values.gateway.exposeService }}
{{- $ingressList := list -}}
{{- if .Values.defaultRouting.kubeitDefaultHosts.enabled -}}
{{ $tenantPrefix := "" -}}
{{- if and $.Values.defaultRouting.kubeitDefaultHosts.enabled $.Values.defaultRouting.kubeitDefaultHosts.tenantPrefixEnabled -}}
{{- $tenantPrefix = printf "-%s" .Values.kubeit.tenantName -}}
{{- end -}}
{{- $ingressList = append $ingressList (printf "%s%s.%s.%s" ($.Values.defaultRouting.kubeitDefaultHosts.hostsPrefix | default $.Values.app) $tenantPrefix $.Values.kubeit.clusterSubdomain .Values.defaultRouting.kubeitDefaultHosts.dnsDomain) -}}
{{- $ingressList = append $ingressList (printf "%s%s.%s.%s.%s" ($.Values.defaultRouting.kubeitDefaultHosts.hostsPrefix | default $.Values.app) $tenantPrefix $.Values.kubeit.shortRegion $.Values.kubeit.environmentName $.Values.defaultRouting.kubeitDefaultHosts.dnsDomain) -}}
{{- $ingressList = append $ingressList (printf "%s%s.%s.%s.%s.%s" ($.Values.defaultRouting.kubeitDefaultHosts.hostsPrefix | default $.Values.app) $tenantPrefix $.Values.kubeit.clusterColour $.Values.kubeit.shortRegion $.Values.kubeit.environmentName $.Values.defaultRouting.kubeitDefaultHosts.dnsDomain) -}}
{{- if $.Values.defaultRouting.kubeitDefaultHosts.tenantMultiRegion -}}
{{- $ingressList = append $ingressList (printf "%s%s.%s.%s" ($.Values.defaultRouting.kubeitDefaultHosts.hostsPrefix | default $.Values.app) $tenantPrefix $.Values.kubeit.environmentName $.Values.defaultRouting.kubeitDefaultHosts.dnsDomain) -}}
{{- end -}}
{{- range $host := $.Values.defaultRouting.hosts -}}
{{- $ingressList = append $ingressList $host -}}
{{- end }}
{{- range $vs := $ingressList }}
apiVersion: networking.istio.io/v1
kind: VirtualService
metadata:
  name: {{ $vs | replace "." "-" | trunc 59 }}-ext
  labels:
{{ include "appLabels" $ | trim | indent 4 }}
spec:
  hosts:
    - "{{ $vs }}"
  gateways:
    - {{ required "A valid .Values.gateway.name entry required!" $.Values.gateway.name }}
{{- $prefixes := default (list $.Values.app) $.Values.defaultRouting.urlPrefixes }}
  http:
{{- if $.Values.defaultRouting.urlExactMatches }}
  - match:
  {{- range $.Values.defaultRouting.urlExactMatches }}
  {{- if hasPrefix "/" . }}
    {{ fail "url matches must not include leading slash"}}
  {{- end}}
  {{- $slashMatch := printf "/%s" . }}
    - uri:
        exact: {{ $slashMatch }}
    - uri:
        prefix: {{ $slashMatch }}/
  {{- end }}
  # routes to service
    route:
    - destination:
        host: {{ include "platform-service.fullQualifiedServiceName" $ | quote }}
{{- if $.Values.defaultRouting.corsPolicy }}
    corsPolicy:
{{ $.Values.defaultRouting.corsPolicy | toYaml | trim | indent 6 }}
{{- end }}
    {{- if $.Values.defaultRouting.timeout }}
    timeout: {{ $.Values.defaultRouting.timeout }}
    {{- end }}
{{- end }}

{{- if $.Values.defaultRouting.redirectOnNoTrailingSlash }}
  # redirect on prefixes without trailing slashes
  {{- range $prefixes }}
  {{- $slashPrefix := printf "/%s" . }}
  - match:
    - uri:
        exact: {{ $slashPrefix }}
    redirect:
      uri: {{ $slashPrefix }}/
  {{- end}}
{{- end}}
  # routes to service
  - route:
    - destination:
        host: {{ include "platform-service.fullQualifiedServiceName" $ | quote }}
{{- if $.Values.defaultRouting.corsPolicy }}
    corsPolicy:
{{ $.Values.defaultRouting.corsPolicy | toYaml | trim | indent 6 }}
{{- end -}}
    {{- if $.Values.defaultRouting.timeout }}
    timeout: {{ $.Values.defaultRouting.timeout }}
    {{- end }}

  {{- if not $.Values.defaultRouting.catchAll }}
    match:
    {{- range $prefixes }}
    {{- if hasPrefix "/" . }}
      {{ fail "url prefixes must not include leading slash"}}
    {{- end}}
    {{- $slashPrefix := printf "/%s" . }}
    - uri:
        prefix: {{ $slashPrefix }}/
    {{- end }}
  {{- end }}
{{- if $.Values.defaultRouting.rewriteUrlPrefix.enabled }}
    rewrite:
      uri: {{ required "rewriteUri is required" $.Values.defaultRouting.rewriteUrlPrefix.replaceWith }}
{{- end}}
    # deprecated
    headers:
      request:
        add:
          x-appname: {{ first $prefixes }}
{{- include "retries" $ }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
