{{- range $app := .Values.applications }}
{{- $srChart := $.Values.serviceChart.chart -}}
{{- $srRepo := $.Values.serviceChart.repoURL -}}
{{- $srTargetRevision := $.Values.serviceChart.targetRevision -}}
{{- $srPath := "" -}}
{{- if hasKey $app "serviceChart" -}}
{{- if hasKey $app.serviceChart "chart" -}}
{{- $srChart = $app.serviceChart.chart -}}
{{- end -}}
{{- if hasKey $app.serviceChart "targetRevision" -}}
{{- $srTargetRevision = $app.serviceChart.targetRevision -}}
{{- end -}}
{{- if hasKey $app.serviceChart "repoURL" -}}
{{- $srRepo := $app.serviceChart.repoURL -}}
{{- end -}}
{{- if hasKey $app.serviceChart "path" -}}
{{- $srPath := $app.serviceChart.path -}}
{{- end -}}
{{- end -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $app.name }}
  namespace: {{ $.Values.managementNamespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  {{- if hasKey $app "annotations" }}
  annotations:
    {{- with $app.annotations }}
    {{- toYaml . | indent 4 }}
    {{- end }}
  {{- else }}
  {{- if $app.useArgoCDimageUpdater }}
  annotations:
    argocd-image-updater.argoproj.io/image-list: alias={{ $app.image.name }}:{{ $app.image.tag }}
    argocd-image-updater.argoproj.io/alias.update-strategy: digest
    argocd-image-updater.argoproj.io/alias.force-update: "true"
  {{- end }}
  {{- end }}
spec:
  destination:
    namespace: {{ $app.namespace }}
    server: https://kubernetes.default.svc
  project: {{ $.Values.tenantName }}
  sources:
    - repoURL: {{ $srRepo }}
      {{- if $srPath }}
      path: {{ $srPath }}
      {{- else }}
      chart: {{ $srChart }}
      {{- end }}
      targetRevision: {{ $srTargetRevision }}
      helm:
        releaseName: {{ $app.name }}
        valueFiles:
          - $values/appValues/global.yaml
          - $values/appValues/{{ $app.name }}/global.yaml
          - $values/appValues/{{ $app.name }}/{{ $.Values.teamName }}.yaml
          - $values/appValues/{{ $app.name }}/{{ $.Values.teamName }}-{{ $.Values.logicalEnvName }}.yaml
          - $values/appValues/{{ $app.name }}/{{ $.Values.teamName }}-{{ $.Values.logicalEnvName }}-{{ $app.namespace }}.yaml
        ignoreMissingValueFiles: true
        values: |
          # Image values pass from application as they are common for kind:application and serviceChart
          {{- if hasKey $app "image" }}
          image:
            name: {{ $app.image.name }}
            tag: {{ $app.image.tag }}
          {{- end }}
          # Pass variables from KubeIT
          kubeit:
            env: {{ $.Values.env }}
            region: {{ $.Values.region }}
            dnsDomain: {{ $.Values.dnsDomain }}
            internalDnsDomain: {{ $.Values.internalDnsDomain }}
            clusterSubdomain: {{ $.Values.clusterSubdomain }}
            clusterColour: {{ $.Values.clusterColour }}
            ingressType: {{ $.Values.ingressType }}
            shortRegion: {{ $.Values.shortRegion }}
            tenantName: {{ $.Values.tenantName }}
            targetRevision: {{ $.Values.targetRevision }}
            repoURL: {{ $.Values.repoURL }}
            managementNamespace: {{ $.Values.managementNamespace }}
    - repoURL: {{ $.Values.repoURL }}
      targetRevision: {{ $.Values.targetRevision }}
      ref: values
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 1m
      limit: 2
    syncOptions:
    - Validate=true
    - CreateNamespace=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
---
{{- end }}
