{{- range $app := .Values.applications }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $app.name }}
  namespace: {{ $.Values.managementNamespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  {{- if $app.useArgoCDimageUpdater }}
  annotations:
    argocd-image-updater.argoproj.io/image-list: alias={{ $app.image.name }}:{{ $app.image.tag }}
    argocd-image-updater.argoproj.io/alias.update-strategy: digest
    argocd-image-updater.argoproj.io/alias.force-update: "true"
  {{- end }}
spec:
  destination:
    namespace: {{ $app.namespace }}
    server: https://kubernetes.default.svc
  project: {{ $.Values.tenantName }}
  sources:
    - repoURL: {{ default $.Values.serviceChart.repoURL $app.serviceChart.repoURL }}
      chart: {{ default $.Values.serviceChart.chart $app.serviceChart.chart }}
      targetRevision: {{ default $.Values.serviceChart.targetRevision $app.serviceChart.targetRevision }}
      helm:
        releaseName: {{ $app.name }}
        valueFiles:
          - $values/appValues/global.yaml
          - $values/appValues/{{ $app.name }}/global.yaml
          - $values/appValues/{{ $app.name }}/{{ $.Values.env }}.yaml
          - $values/appValues/{{ $app.name }}/{{ $.Values.env }}-{{ $.Values.shortRegion }}.yaml
          - $values/appValues/{{ $app.name }}/{{ $.Values.env }}-{{ $.Values.shortRegion }}-{{ $.Values.clusterColour }}.yaml
          - $values/appValues/{{ $app.name }}/{{ $.Values.env }}-{{ $.Values.shortRegion }}-{{ $.Values.clusterColour }}-{{ $app.namespace }}.yaml
        ignoreMissingValueFiles: true
        values: |
          # Image values pass from application as they are common for kind:application and serviceChart
          {{- if hasKey $app "image" }}
          image:
            name: {{ $app.image.name }}
            tag: {{ $app.image.tag }}
          {{- end }}
          # Pass variables from KubeIT
          env: {{ $.Values.env }}
          region: {{ $.Values.region }}
          dnsDomain: {{ $.Values.dnsDomain }}
          internalDnsDomain: {{ $.Values.internalDnsDomain }}
          clusterSubdomain: {{ $.Values.clusterSubdomain }}
          clusterColour: {{ $.Values.clusterColour }}
          ingressType: {{ $.Values.ingressType }}
          shortRegion: {{ $.Values.shortRegion }}
          tenantName: {{ $.Values.tenantName }}
          targetRevision: {{ $.Values.targetRevision }}
          repoURL: {{ $.Values.repoURL }}
          managementNamespace: {{ $.Values.managementNamespace }}
    - repoURL: {{ $.Values.global.repoURL }}
      targetRevision: {{ $.Values.global.targetRevision }}
      ref: values
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 1m
      limit: 2
    syncOptions:
    - Validate=true
    - CreateNamespace=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
{{- end }}
