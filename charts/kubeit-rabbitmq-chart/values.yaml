# Default values for RabbitMQ Helm chart.
---
tenantName: tenant2
component: rabbitmq
rabbitmqCluster:
  metadata:
    name: testmq-tenant
  spec:
    replicas: 1
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        memory: 800Mi
    containers:
      volumeMount:
        name: persistence-testmq
    initContainers:
      volumeMount:
        name: persistence-testmq

  additionalConfig: |
    log.console.level = info
    channel_max = 1700
    default_user_tags.administrator = true

# it should be optionally to use external Azure File Share
# it should support both: AKS build-in storage class and Azure File Share and external Azure File Share
persistentVolume:
  # Note: if external is set to true, and want to use External Azure File Share it must be set to file.csi.azure.com
  external: false # Set to false to use AKS built-in storage classes
  storageClassName: azurefile-csi  # set the storage class name
  capacity:
    storage: 2Gi # configure PVC size
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=0
    - gid=0
    - mfsymlinks
    - cache=strict
    - nosharesock
    - nobrl
  csi:
    driver: file.csi.azure.com
    volumeHandle: rabbitmq-tenant
    volumeAttributes:
      shareName: rabbitmq # name of Azure File Share

queue:
  - name: testmq-tenant
    replicas: 1
    replicas: 1
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        memory: 800Mi
    arguments:
      x_max_length_bytes: 1000000000 # setting the retention policy
      x_message_ttl: 60000 # setting the message TTL

users:
  - name: rohan
    vhost: /
    tags:
      - administrator
    permissions:
      configure: .*
      write: .*
      read: .*
    userK8sSecretName: admin-user-creds # Create external secret

service:
  create: true
  type: ClusterIP
  uiPort: 15672
  tcpPort: 5672

virtualService:
  create: true
  host: ""
  useCors: false
  public: false
  allowOrigins: []

# KubeIT passed variables
dnsDomain: "kubeit.dnv.com"
internalDnsDomain: "kubeit-int.dnv.com"
shortRegion: "we"
clusterColour: "blue"
env: "dev"

serviceAccount:
  # Specifies whether a service account should be created
  create: true ## Set to false
  # Annotations to add to the service account
  annotations:
    azure.workload.identity/client-id: 850ed0f2-3b12-4334-934f-b1b168a5ea90
    azure.workload.identity/tenant-id: adf10e2b-b6e9-41d6-be2f-c12bb566019c
  name: "rabbitmq-sa"

# SecretStore is definition how to access Azure Key Vault
# serviceAccount must be created to use SecretStore with annotations for Workload Identity
# https://docs.kubeit.dnv.com/documentation/components/access-management/?h=workload#workload-identity
secretStore:
  create: true ## Set to false
  vaultUrl: "https://kubeit-dev-kv-sh-we.vault.azure.net/"

# ExternalSecrets is definition how to create k8s secret based on Azure Key Vault secret
#  - name: k8s-secret-name (to create)
#   data:
#     - key: k8s-secret-key (to create)
#       azureSecretName: name-of-secret-in-azure-key-vault
# SecretStore must be created to use ExternalSecrets
externalSecrets:
  - name: rabbitmq-storageaccount-secret
    data:
      - key: azurestorageaccountname
        azureSecretName: azurestorageaccountname
      - key: azurestorageaccountkey
        azureSecretName: azurestorageaccountkey
  - name: admin-user-creds
    data:
      - key: username
        azureSecretName: rabbimq-admin-user
      - key: password
        azureSecretName: rabbimq-admin-pass
