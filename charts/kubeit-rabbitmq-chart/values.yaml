# Default values for RabbitMQ Helm chart.
---
tenantName: tenant2
rabbitmqCluster:
  metadata:
    name: testmq-tenant
  spec:
    replicas: 1
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        memory: 800Mi
    containers:
      volumeMount:
        name: persistence-testmq
    initContainers:
      volumeMount:
        name: persistence-testmq

  additionalConfig: |
    log.console.level = info
    channel_max = 1700
    default_user_tags.administrator = true

persistentVolume:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: azurefile-csi
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=0
    - gid=0
    - mfsymlinks
    - cache=strict
    - nosharesock
    - nobrl
  csi:
    driver: file.csi.azure.com
    volumeHandle: testmq-tenant # make sure this is unique in the cluster
    volumeAttributes:
      shareName: rabbitmq # name of Azure File Share

queue:
  - name: testmq-tenant
    replicas: 1
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        memory: 800Mi
    arguments:
      x_max_length_bytes: 1000000000 # setting the retention policy
      x_message_ttl: 60000 # setting the message TTL

users:
  - name: admin
    vhost: /
    tags:
      - administrator
    permissions:
      configure: .*
      write: .*
      read: .*
    userK8sSecretName: admin-user-creds

service:
  create: true
  type: ClusterIP
  port: 5672

virtualService:
  create: true
  host: ""
  useCors: false
  public: false
  allowOrigins: []

# KubeIT passed variables
dnsDomain: "kubeit.dnv.com"
internalDnsDomain: "kubeit-int.dnv.com"
shortRegion: "we"
clusterColour: "green"
env: "nonprod"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
    azure.workload.identity/client-id: 1111-2222-3333
    azure.workload.identity/tenant-id: adf10e2b-b6e9-41d6-be2f-c12bb566019c
  name: ""

# SecretStore is definition how to access Azure Key Vault
# serviceAccount must be created to use SecretStore with annotations for Workload Identity
# https://docs.kubeit.dnv.com/documentation/components/access-management/?h=workload#workload-identity
secretStore:
  create: false
  vaultUrl: ""

# ExternalSecrets is definition how to create k8s secret based on Azure Key Vault secret
# - name: k8s-secret-name (to create)
#   key: k8s-secret-key (to create)
#   azureSecretName: name-of-secret-in-azure-key-vault
# SecretStore must be created to use ExternalSecrets
externalSecrets: []
