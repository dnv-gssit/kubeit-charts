apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: {{ printf "%s-%s" .Release.Name .Values.tenantName | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "kubeit-rabbit-chart.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  image: {{ .Values.rabbitmqCluster.image }}
  replicas: {{ .Values.rabbitmqCluster.spec.replicas }}
{{- if .Values.rabbitmqCluster.defaultUserSecret }}
  secretBackend:
    externalSecret:
      name: {{ .Values.rabbitmqCluster.defaultUserSecret }}
{{- end }}
  resources:
    requests:
      cpu: {{ .Values.rabbitmqCluster.spec.resources.requests.cpu }}
      memory: {{ .Values.rabbitmqCluster.spec.resources.requests.memory }}
    limits:
     memory: {{ .Values.rabbitmqCluster.spec.resources.limits.memory }}
     cpu: {{ .Values.rabbitmqCluster.spec.resources.limits.cpu }}
  override:
    service:
      metadata:
        labels:
          {{- include "kubeit-rabbit-chart.selectorLabels" . | nindent 10 }}
{{- if .Values.persistentVolume.external }}
    statefulSet:
      spec:
        template:
          spec:
            securityContext:
              runAsUser: 1001
              runAsNonRoot: true
              runAsGroup: 999
            containers:
              - name: rabbitmq
                securityContext:
                  allowPrivilegeEscalation: false
                  privileged: false
                  capabilities:
                    drop:
                    - ALL
                    add:
                    - CHOWN
                    - SETGID
                    - SETUID
                volumeMounts:
                  - mountPath: /var/lib/rabbitmq/mnesia/
                    name: {{ .Values.rabbitmqCluster.spec.containers.volumeMount.name }}
            initContainers:
              # - command: ['sh', '-c', 'if [ ! -d /var/lib/rabbitmq/mnesia ]; then mkdir -p /var/lib/rabbitmq/mnesia; fi && chown 999:999 /var/lib/rabbitmq/mnesia && chmod 755 /var/lib/rabbitmq/mnesia']
              #   image: kubeitglobalsvcauxacrwe.azurecr.io/library/busybox:latest
              #   imagePullPolicy: IfNotPresent
              #   name: setup-fix-permissions
              #   securityContext:
              #     runAsUser: 0
              #     runAsNonRoot: false
              #   resources:
              #     requests:
              #       cpu: 50m
              #       memory: 32Mi
              #     limits:
              #       memory: 50Mi
              #   volumeMounts:
              #     - mountPath: /var/lib/rabbitmq/mnesia/
              #       name: {{ .Values.rabbitmqCluster.spec.initContainers.volumeMount.name }}
              - name: setup-container`
                securityContext:
                  allowPrivilegeEscalation: false
                  privileged: false
                  capabilities:
                    drop:
                    - ALL
                    add:
                    - CHOWN
                    - SETGID
                    - SETUID
                volumeMounts:
                  - mountPath: /var/lib/rabbitmq/mnesia/
                    name: {{ .Values.rabbitmqCluster.spec.initContainers.volumeMount.name }}
        volumeClaimTemplates:
          - apiVersion: v1
            kind: PersistentVolumeClaim
            spec:
              accessModes:
                {{- range .Values.persistentVolume.accessModes }}
                - {{ . }}
                {{- end }}
              storageClassName: {{ required "A storage class name is required" .Values.persistentVolume.storageClassName }}
              resources:
                requests:
                  storage: {{ .Values.persistentVolume.capacity.storage }}
            metadata:
              name: persistence-testmq
{{- end }}
  rabbitmq:
    additionalConfig: |
      {{ .Values.rabbitmqCluster.additionalConfig | nindent 6 }}
      cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    {{- if .Values.rabbitmqCluster.advancedConfig }}
    advancedConfig: |
      {{ .Values.rabbitmqCluster.advancedConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.rabbitmqCluster.additionalPlugins }}
    additionalPlugins: |
    {{- range .Values.rabbitmqCluster.additionalPlugins }}
      - {{ . }}
    {{- end }}
    {{- end }}
  {{- if .Values.rabbitmqCluster.tls.enabled }}
  tls:
    secretName: {{ .Values.rabbitmqCluster.tls.secretName }}
  {{- end }}
  persistence:
    storage: {{ .Values.persistentVolume.capacity.storage }}
    storageClassName: {{ required "A storage class name is required" .Values.persistentVolume.storageClassName }}
  service:
    type: {{ .Values.service.type }}
