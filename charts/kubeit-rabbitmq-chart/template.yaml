---
# Source: kubeit-rabbitmq-chart/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pdb-rabbitmq
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubeit-rabbitmq-chart/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq-sa
  labels:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    azure.workload.identity/client-id: <CLIENT_ID>
    azure.workload.identity/tenant-id: adf10e2b-b6e9-41d6-be2f-c12bb566019c
---
# Source: kubeit-rabbitmq-chart/templates/externalsecret.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: release-name-admin-user-creds
  labels:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: release-name-kubeit-rabbitmq-chart
    kind: SecretStore
  target:
    name: admin-user-creds
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: rabbitmq-admin-user
  - secretKey: password
    remoteRef:
      key: rabbitmq-admin-pass
---
# Source: kubeit-rabbitmq-chart/templates/externalsecret.yaml
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: release-name-rabbitmq-server-tls
  labels:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: release-name-kubeit-rabbitmq-chart
    kind: SecretStore
  target:
    name: rabbitmq-server-tls
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
      engineVersion: v2
      data:
        tls.crt: '{{ .pem | filterPEM "CERTIFICATE" }}'
        tls.key: '{{ .pem | filterPEM "PRIVATE KEY" }}'
  data:
  - secretKey: 
    remoteRef:
      key: rabbitMQCA
---
# Source: kubeit-rabbitmq-chart/templates/peerauthentication.yaml
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: release-name-kubeit-rabbitmq-chart
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-tenant2"
      app.kubernetes.io/component: rabbitmq
  mtls:
    mode: PERMISSIVE
---
# Source: kubeit-rabbitmq-chart/templates/users.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: rabbit-default-admin-permission
spec:
  vhost: "/"
  userReference:
    name: "default-admin"
  permissions:
    configure: ".*"
    read: ".*"
    write: ".*"
  rabbitmqClusterReference:
    name: release-name-tenant2
---
# Source: kubeit-rabbitmq-chart/templates/queue.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: testmq-tenant-queue
  labels:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  name: testmq-tenant
  arguments:
    x-max-length-bytes: 1e+09 ## setting the retention policy
    x-message-ttl: 60000 ## setting the message TTL
  autoDelete: true # queue that has had at least one consumer is deleted when last consumer unsubscribes
  durable: true # the queue will survive a broker restart
  rabbitmqClusterReference:
    name: release-name-tenant2
---
# Source: kubeit-rabbitmq-chart/templates/rabbitmq-cluster.yaml
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: release-name-tenant2
  labels:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  # autoEnableAllFeatureFlags: true
  replicas: 1
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
     memory: 800Mi
  override:
    service:
      metadata:
        labels:
          app.kubernetes.io/name: "release-name-tenant2"
          app.kubernetes.io/component: rabbitmq
  rabbitmq:
    additionalConfig: |
      
      log.console.level = info
      channel_max = 1700
      default_user_tags.administrator = true
      vm_memory_high_watermark.absolute = 4Gi
      
  tls:
    caSecretName: rabbitmq-ca
    secretName: rabbitmq-server-tls
  persistence:
    storage: 2Gi
    storageClassName: azurefile-csi
  service:
    type: ClusterIP
---
# Source: kubeit-rabbitmq-chart/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sm-release-name-tenant2
  labels:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    tenant: tenant2
spec:
  endpoints:
  - port: prometheus
    scheme: https
    interval: 5m
    scrapeTimeout: 1m
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      keyFile: /etc/prom-certs/key.pem
      insecureSkipVerify: true
  - port: prometheus
    scheme: https
    path: /metrics/detailed
    params:
      family:
        - queue_coarse_metrics
        - queue_metrics
    interval: 5m
    scrapeTimeout: 1m
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      keyFile: /etc/prom-certs/key.pem
      insecureSkipVerify: true
  selector:
    matchLabels:
      app.kubernetes.io/component: rabbitmq
  namespaceSelector:
    matchNames:
      - default
---
# Source: kubeit-rabbitmq-chart/templates/users.yaml
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: default-admin
  labels:
    helm.sh/chart: kubeit-rabbitmq-chart-0.1.0
    app.kubernetes.io/name: "release-name-tenant2"
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  tags:
  - administrator
  rabbitmqClusterReference:
    name: release-name-tenant2
  importCredentialsSecret:
    name: admin-user-creds
---
# Source: kubeit-rabbitmq-chart/templates/virtualservice.yaml
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: release-name-kubeit-rabbitmq-chart-ui
spec:
  gateways:
  - istio-system/global-internaluse-gateway
  hosts:
  - rabbitmq-tenant2-release-name.blue.we.dev.kubeit-int.dnv.com
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: release-name-tenant2
        port:
          number: 15672
---
# Source: kubeit-rabbitmq-chart/templates/virtualservice.yaml
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: release-name-kubeit-rabbitmq-chart-tcp
spec:
  gateways:
  - istio-system/global-internaluse-gateway
  hosts:
  - rabbitmq-tenant2-release-name.blue.we.dev.kubeit-int.dnv.com
  tcp:
  - match:
    - port: 5672
    route:
    - destination:
        host: release-name-tenant2
        port:
          number: 5672
