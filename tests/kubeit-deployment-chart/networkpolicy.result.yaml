---
# Source: kubeit-deployment-chart/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-kubeit-deployment-chart-np
  labels:
    app.kubernetes.io/name: kubeit-deployment-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    tenant: tenant
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kubeit-deployment-chart
      app.kubernetes.io/instance: release-name
  policyTypes:
    - Ingress
  ingress:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: n1
      podSelector:
        matchLabels:
          app: app1
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: n2
      podSelector:
        matchLabels:
          app: app2
---
# Source: kubeit-deployment-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubeit-deployment-chart
  labels:
    app.kubernetes.io/name: kubeit-deployment-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    tenant: tenant
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubeit-deployment-chart
    app.kubernetes.io/instance: release-name
---
# Source: kubeit-deployment-chart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubeit-deployment-chart
  labels:
    app.kubernetes.io/name: kubeit-deployment-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    tenant: tenant
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeit-deployment-chart
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeit-deployment-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        tenant: tenant
    spec:
      securityContext:
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      terminationGracePeriodSeconds: 30
      containers:
        - name: kubeit-deployment-chart
          image: nginxinc/nginx-unprivileged:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 101
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 64Mi
---
# Source: kubeit-deployment-chart/templates/virtualservice.yaml
---
---
# Source: kubeit-deployment-chart/templates/virtualservice.yaml
apiVersion: networking.istio.io/v1
kind: VirtualService
metadata:
  name: release-name-green-we-nonprod-kubeit-dnv-com-ext
  labels:
    app.kubernetes.io/name: kubeit-deployment-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    tenant: tenant
spec:
  hosts:
    - release-name.green.we.nonprod.kubeit.dnv.com
  gateways:
    - istio-system/global-https-internal-default-gateway
  http:
    - match:
      - uri:
          prefix: /
      route:
        - destination:
            host: release-name-kubeit-deployment-chart.default.svc.cluster.local
            port:
              number: 8080
