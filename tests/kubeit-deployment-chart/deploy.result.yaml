---
# Source: kubeit-deployment-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test
  labels:
    app.kubernetes.io/name: test
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: test
    app.kubernetes.io/instance: release-name
---
# Source: kubeit-deployment-chart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  labels:
    app.kubernetes.io/name: test
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: test
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: test
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        some-label: some-value
      annotations:
        new-annotation: new-value
        some-annotation: some-value
    spec:
      securityContext:
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      containers:
        - name: test
          image: nginxinc/nginx-unprivileged:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            fsGroup: 2000
            runAsGroup: 3000
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: ENV_VAR_1
              value: "value1"
            - name: ENV_VAR_2
              value: "value2"
            - configMapRef:
                name: my-config-map
            - secretRef:
                name: my-secret
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: Custom-Header
                value: Awesome
              path: /healthz
              port: 808080
            initialDelaySeconds: 3
            periodSeconds: 3
      nodeSelector:
        cpu: high
        disktype: ssd
      tolerations:
        - effect: NoSchedule
          key: key1
          operator: Equal
          value: value1
        - key: key2
          operator: Exists
